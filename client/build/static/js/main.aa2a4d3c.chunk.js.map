{"version":3,"sources":["logo.svg","components/InputTextField.js","components/SmallButton.js","components/ResultStrings.js","pages/MainPage.js","App.js","reportWebVitals.js","index.js"],"names":["InputTextField","props","Grid","item","xs","align","icon","FormControl","TextField","variant","label","fieldName","value","fieldValue","onChange","e","helperText","updateTextField","FormHelperText","SmallButton","style","textAlign","Button","color","onClick","buttonClicked","backgroundColor","ResultStrings","StyledTableCell","withStyles","root","TableCell","TableContainer","Table","aria-label","TableHead","TableRow","component","scope","TableBody","rows","map","row","id","repoName","userName","FormData","require","MainPage","base_api_url","useEffect","a","axios","get","res","data","console","log","fetchTrie","BurgendyTextTypography","Typography","useState","addUser","searchRepo","fieldObj","setFieldObj","flash","setFlash","setRows","flashMessage","status","handleClose","event","prevState","changeRepo","field","currObj","target","params","form_data","append","post","handleDeleteClicked","delete","Container","maxWidth","container","spacing","alignItems","justify","minHeight","className","Card","CardHeader","action","IconButton","Delete","CardContent","Add","Snackbar","anchorOrigin","vertical","horizontal","open","autoHideDuration","onClose","Alert","severity","Search","App","exact","path","to","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.aa2a4d3c.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from \"react\";\r\nimport { Typography, Grid, TextField, FormHelperText, FormControl } from '@material-ui/core'\r\nimport { AccountCircle } from '@material-ui/icons';\r\n\r\nconst InputTextField = (props) => {\r\n\r\n    const handleFieldChange = e => {\r\n        // change the value of field when the text is changing\r\n        if (props.helperText === 'Add a github user') {\r\n            props.updateTextField(e, 'addUser');\r\n        }\r\n        else {\r\n            // assume the only other case is search repo\r\n            props.updateTextField(e, 'searchRepo')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Grid item xs={12} align='center'>\r\n                {props.icon}\r\n            {/* </Grid>\r\n            <Grid item xs={12} spacing={0} align='center'> */}\r\n                <FormControl> \r\n                        <TextField\r\n                            variant=\"outlined\"\r\n                            label={props.fieldName}\r\n                            // {props.fieldName}\r\n                            value={props.fieldValue}\r\n                            onChange={handleFieldChange}\r\n                            \r\n                        />\r\n                \r\n                        <FormHelperText>\r\n                            {props.helperText}\r\n                        </FormHelperText>\r\n                    </FormControl>\r\n            </Grid>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default InputTextField;","import React from \"react\";\r\nimport { Grid, Button } from '@material-ui/core';\r\n\r\nconst SmallButton = (props) => {\r\n\r\n    const handleButtonClick = () => {\r\n        // call the parent callback function to send a request to the backend\r\n        props.buttonClicked();\r\n    };\r\n\r\n    return (\r\n        <Grid item xs={12} style={{ textAlign:'center' }}>\r\n            <Button \r\n                variant='contained' \r\n                color='primary' \r\n                onClick={handleButtonClick} \r\n                style={{backgroundColor: '#7b113a'}}\r\n            >\r\n                Add\r\n            </Button>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport default SmallButton;","import React from \"react\";\r\nimport { Table, TableContainer, TableHead, TableRow, TableCell, TableBody, withStyles } from '@material-ui/core'\r\n\r\nconst ResultStrings = (props) => {\r\n\r\n\r\n    const StyledTableCell = withStyles({\r\n        root: {\r\n          color: '#150e56'\r\n        }\r\n      })(TableCell);\r\n\r\n    return (\r\n        <>\r\n            <TableContainer>\r\n                <Table aria-label=\"simple-table\">\r\n                    <TableHead> \r\n                        <TableRow> \r\n                            <StyledTableCell component=\"th\" scope=\"row\" >Id</StyledTableCell>\r\n                            <StyledTableCell align=\"right\">Repo Name</StyledTableCell>\r\n                            <StyledTableCell align=\"right\" >Github User</StyledTableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n\r\n                    <TableBody>\r\n                        {props.rows.map(row => (    \r\n                            <TableRow key={row.id}>\r\n                                <StyledTableCell component=\"th\" scope=\"row\">\r\n                                    {row.id}\r\n                                </StyledTableCell>\r\n                                <StyledTableCell align=\"right\" >{row.repoName}</StyledTableCell>\r\n                                <StyledTableCell align=\"right\" >{row.userName}</StyledTableCell>\r\n                            </TableRow>     \r\n                         ))}\r\n\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ResultStrings;","import React, { useState, useEffect } from \"react\";\r\nimport { Typography, Grid, withStyles, Card, CardContent, Container, Snackbar, CardHeader, IconButton } from '@material-ui/core'\r\nimport InputTextField from '../components/InputTextField';\r\nimport LiveTextField from '../components/LiveTextField';\r\nimport SmallButton from '../components/SmallButton';\r\nimport { Add, Search, Delete } from '@material-ui/icons';\r\nimport { Alert } from '@material-ui/lab';\r\nimport ResultStrings from '../components/ResultStrings';\r\nimport axios from 'axios';\r\n\r\nconst FormData = require('form-data');\r\n\r\n\r\n// const textFieldInfo = [\r\n//     {\r\n//         fieldName: 'Repo Name',\r\n//         icon: <Add style={{color: '#7b113a'}}/>,\r\n//         helperText: 'Add a repo'\r\n//     },\r\n//     {\r\n//         fieldName: 'Repo Name',\r\n//         icon: <Search style={{color: '#7b113a'}}/>,\r\n//         helperText: 'Search for repo'\r\n//     }\r\n// ]\r\n\r\n// const rows = [\r\n//     {\r\n//         id: 1,\r\n//         repoName: 'Repo 1',\r\n//         userName: 'Test 1'\r\n//     },\r\n//     {\r\n//         id: 2,\r\n//         repoName: 'Repo 2',\r\n//         userName: 'Test 2'\r\n//     },\r\n//     {\r\n//         id: 3,\r\n//         repoName: 'Repo 3',\r\n//         userName: 'Test 3'\r\n//     }, \r\n//     {\r\n//         id: 4,\r\n//         repoName: 'Repo 1',\r\n//         userName: 'Test 1'\r\n//     },\r\n//     {\r\n//         id: 5,\r\n//         repoName: 'Repo 2',\r\n//         userName: 'Test 2'\r\n//     },\r\n//     {\r\n//         id: 6,\r\n//         repoName: 'Repo 3',\r\n//         userName: 'Test 3'\r\n//     }\r\n// ];\r\n\r\n\r\nconst MainPage = () => {\r\n\r\n    const base_api_url = 'https://beyond-search.herokuapp.com/api';\r\n    // create a trie when the page loads\r\n    useEffect(() => {\r\n        const fetchTrie = async() => {\r\n            const create_trie_endpoint = base_api_url + '/create-trie';\r\n            const res = await axios.get(create_trie_endpoint);\r\n            const data = res.data;\r\n            console.log(data);\r\n        };\r\n        fetchTrie();\r\n    }, []);\r\n\r\n    const BurgendyTextTypography = withStyles({\r\n        root: {\r\n          color: \"#150e56\"\r\n        }\r\n      })(Typography);\r\n\r\n    // set the states of the fields\r\n    const [fieldObj, setFieldObj] = useState({addUser: '', searchRepo: ''})\r\n    const [flash, setFlash] = useState({'open': false, 'status': null});\r\n    const [rows, setRows] = useState([])\r\n\r\n    const flashMessage = (status) => {\r\n        if (status === 'success') {\r\n            setFlash({ 'open': true, 'status': 'success'});\r\n        }\r\n        else {\r\n            setFlash({ 'open': true, 'status': 'error'});\r\n        }\r\n      };\r\n    \r\n      const handleClose = (event) => {\r\n        setFlash(prevState => {\r\n            return { ...prevState, 'open': false};\r\n        });\r\n      };\r\n\r\n    const changeRepo = async(e, field) => {\r\n        // console.log(fieldObj)\r\n        // change the value of add repo\r\n        setFieldObj(prevState => {\r\n            const currObj = {...prevState};\r\n            currObj[field] = e.target.value;\r\n            return currObj;\r\n        })\r\n\r\n        // send a request to the backend if search repo is being touched\r\n        if (field === 'searchRepo') {\r\n            const search_trie_endpoint = base_api_url + '/search-trie';\r\n            try {\r\n                const res = await axios.get(search_trie_endpoint, { params: { 'searchString': e.target.value }});\r\n                const data = res.data;\r\n                setRows(prevState => {\r\n                    // const newRows = { ...data };\r\n                    return data;\r\n                });\r\n                console.log(data);\r\n            }\r\n            catch (err) {\r\n                console.log(err);\r\n            }\r\n        }\r\n    }\r\n\r\n    const addUser = async(e) => {\r\n        // send post request to backend\r\n        const add_user_endpoint = base_api_url + '/add-user';\r\n        const form_data = new FormData();\r\n        form_data.append('userName', fieldObj['addUser']);\r\n        // console.log(add_user_endpoint);\r\n        // console.log(user);\r\n        try {\r\n            const res = await axios.post(add_user_endpoint, form_data);\r\n            const data = res.data;\r\n            console.log(data);\r\n            flashMessage('success');\r\n        }\r\n        catch (err) {\r\n           flashMessage('error');\r\n        }\r\n\r\n        // clear the user from the object\r\n        setFieldObj(prevState => {\r\n            const currObj = {...prevState};\r\n            currObj['addUser'] = '';\r\n            return currObj;\r\n        })\r\n\r\n        // depending on the data, flash a message to the user\r\n\r\n    }\r\n\r\n    const handleDeleteClicked = async() => {\r\n        // delete all users from trie \r\n        const delete_users_endpoint = base_api_url + '/truncate/8';\r\n        const res = await axios.delete(delete_users_endpoint);\r\n        console.log('Data Deleted');\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <Container maxWidth='xs'>\r\n            <Grid container spacing={8} alignItems='center' justify=\"center\" style={{ minHeight: '100vh' }}>\r\n                <Grid item xs={12} className='title' align='center'>\r\n                    <BurgendyTextTypography variant='h2'> Beyond Search </BurgendyTextTypography>\r\n                </Grid>\r\n                \r\n                <Grid item xs={12} align='center'>\r\n                    <Card>\r\n                        <CardHeader\r\n                            action={\r\n                                    <IconButton aria-label=\"delete\" onClick={handleDeleteClicked}>\r\n                                        <Delete style={{color: '#880e4f'}} />\r\n                                    </IconButton>\r\n                            }\r\n                        />\r\n                        <CardContent>\r\n                            <InputTextField fieldValue={fieldObj['addUser']} fieldName='User Name' icon={ <Add style={{color: '#7b113a'}} /> } helperText= 'Add a github user' updateTextField={changeRepo}/>\r\n                            <SmallButton buttonClicked={addUser}/>\r\n                        </CardContent>\r\n                    </Card>\r\n                </Grid>\r\n\r\n                <Snackbar anchorOrigin={{ vertical: 'center', horizontal: 'center' }} open={flash['open']} autoHideDuration={3000} onClose={handleClose}>\r\n                    <Alert onClose={handleClose} severity={flash['status']}>\r\n                        {(flash['status'] === 'success') ? 'User Added!': 'User Not Added :('}\r\n                    </Alert>\r\n                </Snackbar>\r\n\r\n                <Grid item xs={12} align='center'>\r\n                    <Card>\r\n                            <CardContent>\r\n                                <InputTextField fieldValue={fieldObj['searchRepo']} fieldName='Repo Name' icon={ <Search style={{color: '#7b113a'}} /> } helperText= 'Search for repo' updateTextField={changeRepo}/>\r\n                            </CardContent>\r\n                    </Card>\r\n                </Grid>\r\n\r\n                <Grid item xs={12} align='center'>\r\n                    <ResultStrings rows={rows}/>\r\n                </Grid>\r\n              \r\n            </Grid>\r\n            </Container>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default MainPage;","import logo from './logo.svg';\r\nimport './assets/css/App.css';\r\nimport { BrowserRouter as Router, Switch, Route, Redirect } from 'react-router-dom';\r\nimport MainPage from './pages/MainPage';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className='App'>\r\n      <Router>\r\n        <Switch> \r\n          <Route exact path=\"/\">\r\n            <Redirect to='/main' />\r\n          </Route>\r\n\r\n          <Route path='/main' component={MainPage} />\r\n        </Switch>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}